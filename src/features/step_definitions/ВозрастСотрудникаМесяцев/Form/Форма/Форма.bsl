//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьСотрудник()","ЕстьСотрудник","Допустим есть сотрудник");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьСотрудникРавныйИванов()","ЕстьСотрудникРавныйИванов","Допустим есть сотрудник, равный Иванов");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьСотрудникРавный(Парам01)","ЕстьСотрудникРавный","Допустим есть сотрудник, равный ""Иванов""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьСотрудникРавный000001()","ЕстьСотрудникРавный000001","Допустим есть сотрудник, равный 000001");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьДатаРожденияСотрудникаРавная(Парам01)","ЕстьДатаРожденияСотрудникаРавная","и есть дата рождения сотрудника, равная 01.01.1980");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьДатаРасчетаРавная(Парам01)","ЕстьДатаРасчетаРавная","И есть дата расчета, равная 18.09.2016");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозрастВМесяцахРавен(Парам01)","ВозрастВМесяцахРавен","Тогда возраст в месяцах равен  440");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим есть сотрудник, равный "Иванов"
//@ЕстьСотрудникРавный(Парам01)
Процедура ЕстьСотрудникРавный(Сотрудник) Экспорт
	Контекст.Вставить("Сотрудник", 	Сотрудник);
КонецПроцедуры

&НаКлиенте
//и есть дата рождения сотрудника, равная 01.01.1980
//@ЕстьДатаРожденияСотрудникаРавная(Парам01)
Процедура ЕстьДатаРожденияСотрудникаРавная(ДатаРождения) Экспорт
	Контекст.Вставить("ДатаРождения", 	ДатаРождения);
КонецПроцедуры

&НаКлиенте
//И есть дата расчета, равная 18.09.2016
//@ЕстьДатаРасчетаРавная(Парам01)
Процедура ЕстьДатаРасчетаРавная(ДатаРасчета) Экспорт
	Контекст.Вставить("ДатаРасчета", 	ДатаРасчета);
КонецПроцедуры


&НаСервере
Процедура   ВозрастВМесяцахРавенНаСервере(ОжидаемыйРезультат, Контекст)
	Результат = ОбщийМодуль2.ПолучитьВозрастСотрудникаМесяцев(Контекст.ДатаРождения, Контекст.ДатаРасчета, Контекст.Сотрудник);
	Если НЕ Результат = ОжидаемыйРезультат Тогда
		ВызватьИсключение "Результат рассчитан не верно";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//Тогда возраст в месяцах равен  440
//@ВозрастВМесяцахРавен(Парам01)
Процедура ВозрастВМесяцахРавен(ОжидаемыйРезультат) Экспорт
	ВозрастВМесяцахРавенНаСервере(ОжидаемыйРезультат, Контекст) ;
КонецПроцедуры

//окончание текста модуля


